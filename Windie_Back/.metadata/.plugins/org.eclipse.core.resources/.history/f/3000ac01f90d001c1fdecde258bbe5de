package apiVisao;

import java.sql.SQLException;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import controle.ManterUsuarios;
import util.TokenManager;


@RequestMapping("/usuario")
@RestController
public class VisaoUsuario {
	
	
	@PostMapping(path = "cadastrar")
	public void cadastrarUsuario(@RequestBody  String json) throws SQLException {
		
		JSONObject jsonObj = new JSONObject(json);
		
		System.out.println("requisição recebida: "+json);
		System.out.println("E-mail: "+jsonObj.getString("email"));

		
		ManterUsuarios.getInstance().CadastrarUsuario(jsonObj.getString("email"), jsonObj.getString("senha"), jsonObj.getString("apelido"));
		
	}
	
	
	@PostMapping(path = "login")
	public String autenticarUsuario(@RequestBody  String json) throws Exception {
		
		JSONObject jsonObj = new JSONObject(json);
		
		//System.out.println("requisição recebida: "+json);
		//System.out.println("E-mail: "+jsonObj.getString("email"));

		if(ManterUsuarios.getInstance().AutenticaUsuario(jsonObj.getString("email"),jsonObj.getString("senha"))) {
			
			return TokenManager.getInstance().GenerateToken(jsonObj.getString("email"));
			
		}else {
			
			throw new Exception("Dados de login invalidos");
		}

		
	}
	
	@PostMapping(path = "autorizar")
	public String autenticarTokenUsuario(@RequestBody  String json) throws Exception {
		
		JSONObject jsonObj = new JSONObject(json);
		
		//System.out.println("Token: "+jsonObj.getString("token"));

		return TokenManager.getInstance().AuthToken(jsonObj.getString("token"));
		
	}
	
	@PostMapping(path = "logout")
	public void encerrarUsuario(@RequestBody  String json) throws Exception {
		
		JSONObject jsonObj = new JSONObject(json);
		
		System.out.println("Token: "+jsonObj.getString("token"));

		TokenManager.getInstance().DestruirToken(jsonObj.getString("token"));
		
	}

}
